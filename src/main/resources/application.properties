# Server configuration
server.port=8080

# H2 Database Configuration
spring.datasource.url=jdbc:h2:mem:financesdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.sql.init.mode=always
spring.datasource.sql.schema-locations=classpath:schema.sql

# Enable H2 console
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Vaadin configuration
vaadin.whitelisted-packages=com.code.truck.finances

# Prevent memory leaks
spring.jmx.enabled=false
server.tomcat.additional-tld-skip-patterns=*.jar
spring.devtools.restart.enabled=false

# OAuth2 Google Configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=profile,email

# Security configuration
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Development mode for Vaadin (switch to true when in development)
vaadin.productionMode=false

logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2=DEBUG
logging.level.com.vaadin=DEBUG